<?php

namespace App\Http\Controllers\V1\User;

use App\Models\User;
use Illuminate\Support\Str;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Hash;
use App\Http\Controllers\Controller;

class AddUserController extends Controller
{
    /**
     * User registration
     *
     * @param \Illuminate\Http\Request
     * @return \Illuminate\Http\Response
     *
     * @OA\RequestBody(
     *     request="addUserRequest",
     *     description="User object to add to server",
     *     @OA\MediaType(
     *         mediaType="multipart/form-data",
     *         @OA\Schema(
     *             required={"name", "email", "password"},
     *             @OA\Property(property="name", ref="#/components/schemas/Name"),
     *             @OA\Property(property="email", ref="#/components/schemas/Email"),
     *             @OA\Property(property="password", ref="#/components/schemas/Password"),
     *         ),
     *     ),
     * ),
     * @OA\Post(
     *      path="/register",
     *      operationId="addUserEntry",
     *      tags={"User"},
     *      summary="Add single user",
     *      description="Adds single user.",
     *      @OA\Parameter(ref="#/components/parameters/X-Requested-With"),
     *      requestBody={"$ref": "#/components/requestBodies/addUserRequest"},
     *      @OA\Response(
     *          response=201,
     *          description="Successful operation.",
     *          @OA\JsonContent(ref="#/components/schemas/AddUser201")
     *      ),
     *      @OA\Response(response=405, ref="#/components/responses/405"),
     *      @OA\Response(response=422, ref="#/components/responses/422"),
     *      @OA\Response(response=429, ref="#/components/responses/429"),
     * ),
     * @OA\Schema(
     *     schema="AddUser201",
     *     description="User object has been added successfully",
     *     @OA\Property(property="id", ref="#/components/schemas/EntryUuid"),
     *     @OA\Property(property="access_token", ref="#/components/schemas/AccessToken"),
     *     @OA\Property(property="token_type", ref="#/components/schemas/AccessTokenType"),
     *     @OA\Property(property="message", ref="#/components/schemas/SrvMessage"),
     * ),
     */
    public function __invoke(Request $request)
    {
        // Validate client input
        // If client sent wrong data, adequate response is being generated by Laravel
        $validatedData = $request->validate([
            'name' => 'required|string|max:255',
            'email' => 'required|string|email|max:255|unique:users',
            'password' => 'required|string|min:8',
        ]);

        // Create new user
        $user = User::create([
            // Ordered UUIDs offer some benefits for search speed over unordered
            'id' => Str::orderedUuid()->toString(),
            'name' => $validatedData['name'],
            'email' => $validatedData['email'],
            // Passwords hashed that way are salty
            'password' => Hash::make($validatedData['password']),
        ]);

        // Generate user access token
        $token = $user->createToken('auth_token')->plainTextToken;

        return response()->json([
            'id' => $user->id,
            'access_token' => $token,
            'token_type' => 'Bearer',
            'message' => 'Successful registration.'
        ], 201);
    }
}
