<?php

namespace App\Http\Controllers\V1\Notebook;

use App\Models\Notebook;
use Illuminate\Support\Str;
use Illuminate\Http\Request;
use App\Http\Controllers\Controller;
use Illuminate\Support\Facades\Auth;
use App\Http\Controllers\SaveFileController;

class AddNotebookController extends Controller
{
    /**
     * Add Notebook entry
     *
     * @param \Illuminate\Http\Request
     * @return \Illuminate\Http\Response
     *
     * @OA\RequestBody(
     *     request="addNotebookRequest",
     *     description="Notebook object to add to server",
     *     @OA\MediaType(
     *         mediaType="multipart/form-data",
     *         @OA\Schema(
     *             required={"name", "phone", "email"},
     *             @OA\Property(property="id", ref="#/components/schemas/EntryUuid"),
     *             @OA\Property(property="name", ref="#/components/schemas/Name"),
     *             @OA\Property(property="company", ref="#/components/schemas/Company"),
     *             @OA\Property(property="phone", ref="#/components/schemas/Phone"),
     *             @OA\Property(property="email", ref="#/components/schemas/Email"),
     *             @OA\Property(property="birthday", ref="#/components/schemas/Birthday"),
     *             @OA\Property(property="picture", ref="#/components/schemas/Picture"),
     *         ),
     *     ),
     * ),
     * @OA\Post(
     *      path="/notebook",
     *      operationId="addNotebookEntry",
     *      tags={"Notebook"},
     *      summary="Add single notebook",
     *      description="Adds single notebook.",
     *      security={{"bearerAuth":{}}},
     *      @OA\Parameter(ref="#/components/parameters/X-Requested-With"),
     *      requestBody={"$ref": "#/components/requestBodies/addNotebookRequest"},
     *      @OA\Response(
     *          response=201,
     *          description="Successful operation.",
     *          @OA\JsonContent(ref="#/components/schemas/AddNotebook201")
     *      ),
     *      @OA\Response(response=401, ref="#/components/responses/401"),
     *      @OA\Response(response=405, ref="#/components/responses/405"),
     *      @OA\Response(response=422, ref="#/components/responses/422"),
     *      @OA\Response(response=429, ref="#/components/responses/429"),
     * ),
     * @OA\Schema(
     *     schema="AddNotebook201",
     *     description="Notebook object has been added successfully",
     *     @OA\Property(property="id", ref="#/components/schemas/EntryUuid"),
     *     @OA\Property(property="updated_at", ref="#/components/schemas/SrvUpdatedAt"),
     *     @OA\Property(property="message", ref="#/components/schemas/SrvMessage"),
     * ),
     */
    public function __invoke(Request $request)
    {
        // Add optional data (if missing) not to get an error on entity creation
        $request->mergeIfMissing(['birthday' => null]);
        $request->mergeIfMissing(['company' => null]);
        // User can generate entry UUID on their own, if not, generate it
        // ID collision will result in 422 "Error: Unprocessable Content" response.
        // Entry will not be overwritten.
        $request->mergeIfMissing(['id' => Str::orderedUuid()->toString()]);

        // Validate client input
        // If client sent wrong data, adequate response is being generated by Laravel
        $validatedData = $request->validate([
            'id' => 'required|uuid|unique:notebooks',
            'name' => 'required|string|max:255',
            'company' => 'nullable|string|max:255',
            'phone' => 'required|string|min:10|max:18',
            'email' => 'required|email:rfc,dns|unique:notebooks',
            'birthday' => 'nullable|date_format:Y-m-d',
            'picture' => 'nullable|mimes:jpeg,jpg,png,gif,svg|max:15000',
        ]);

        $fileDbPath = SaveFileController::saveFile($request, $validatedData['id']);

        // Create new Notebook entry
        $notebook = Notebook::create([
            'id' => $validatedData['id'],
            'creator_uuid' => Auth::user()->id,
            'name' => $validatedData['name'],
            'company' => $validatedData['company'],
            'phone' => $validatedData['phone'],
            'email' => $validatedData['email'],
            'birthday' => $validatedData['birthday'],
            'picture' => $fileDbPath,
        ]);

        return response()->json([
            'id' => $notebook['id'],
            'updated_at' => $notebook['updated_at'],
            'message' => 'Entry added.',
        ], 201);
    }
}
